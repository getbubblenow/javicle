#!/bin/bash
function die () {
  echo 1>&2 "${1}"
  exit 1
}

function handle_help_request() {
  if [[ -z "${2}" ]]; then
    return
  fi

  if [[ ${2} == "-h" || ${2} == "--help" ]]; then
    while IFS='' read -r line || [[ -n "$line" ]]; do
      if [[ ${line} =~ ^#.* ]]; then
        if [[ ! ${line} =~ ^#!/bin/bash.* ]]; then
          echo "${line}"
        fi
      else
        break
      fi
    done <"${1}"
    if [[ -z "${JVCL_SKIP_ENV_VAR_HELP}" ]] ; then
      echo "# Environment Variables
#
#     JVCL_SCRATCH_DIR  : Use this as the scratch directory
#                         Default is to create a new temp directory
#
#     JVCL_NO_EXEC      : If set to anything, print the commands that would
#                         have run but do not execute anything
#
"
    fi
    exit 1
  fi
}

# Ensure Java is installed and that it is Java 11
if [[ -z "$(which java)" ]] ; then
  die "Java 11 not installed (java command not found on PATH)"
fi
JAVA_OK=0
for token in $(java -version 2>&1 | grep -i version) ; do
  case "${token}" in '"11.'*)
    JAVA_OK=1
  esac
done
if [[ ${JAVA_OK} -eq 0 ]] ; then
  die "Java 11 not installed (java -version check failed)"
fi

JVCL_DIR="$(cd "$(dirname "${0}")"/.. && pwd)"
JVCL_JAR="$(find "${JVCL_DIR}"/target -type f -name "jvcl-*-prod.jar" | head -1)"
if [[ -z "${JVCL_JAR}" ]] ; then
  # Ensure maven is installed
  if [[ -z "$(which mvn)" ]] ; then
    die "Maven not installed (mvn command not found on PATH), cannot build JVCL jar"
  fi
  mvn -DskipTests=true -Puberjar clean package || die "Error building JVCL jar"
  JVCL_JAR="$(find "${JVCL_DIR}"/target -type f -name "jvcl-*-prod.jar" | head -1)"
  if [[ -z "${JVCL_JAR}" ]] ; then
    die "No JVCL jar file found after successful build"
  fi
fi

SCRATCH_DIR=""
NO_EXEC=""
if [[ -z "${JVCL_SKIP_ENV_VAR_HELP}" ]] ; then
  if [[ -n "${JVCL_SCRATCH_DIR}" ]] ; then
    SCRATCH_DIR="--temp-dir ${JVCL_SCRATCH_DIR}"
  fi

  if [[ -n "${JVCL_NO_EXEC}" ]] ; then
    NO_EXEC="--no-exec"
  fi
fi
JVCL_OPTIONS="${SCRATCH_DIR} ${NO_EXEC}"

handle_help_request "${0}" "${1}"
