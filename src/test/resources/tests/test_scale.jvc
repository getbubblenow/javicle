{
  "assets": [
    // wildcard matches multiple files, vid1_splits becomes a "list" asset. resolution is 320x240
    { "name": "vid1_splits", "path": "src/test/resources/outputs/vid1_splits_*.mp4" }
  ],
  "operations": [
    {
      "operation": "scale",            // name of the operation
      "creates": "scaled_test1",       // output asset name
      "source": "vid1_splits[3]",      // scale this source asset
      "width": "1024",                 // width of scaled asset. if omitted and height is present, width will be proportional
      "height": "768",                 // height of scaled asset. if omitted and width is present, height will be proportional
      "validate": [{
        "comment": "expect output resolution of 1024x768",
        "test": "output.width === 1024 && output.height === 768"
      }]
    },
    {
      "operation": "scale",            // name of the operation
      "creates": "scaled_small",       // asset it creates
      "source": "vid1_splits[3]",      // scale this source asset
      "factor": "0.5",                 // scale factor. if factor is set, width and height are ignored.
      "validate": [{
        "comment": "expect output resolution that is half of source",
        "test": "output.width === source.width/2 && output.height === source.height/2"
      }, {
        "comment": "expect output resolution that is 160x120",
        "test": "output.width === 160 && output.height === 120"
      }]
    }
  ]
}
